# Rime schema
# encoding: utf-8
# CC-BY-4.0

schema:
  author:
    - Hertz Hwang <hertz@26hz.com.cn>
  dependencies:
    - charset
    - pinyin
    - fast_symbol
    - tiger_spelling_pseudo
    - radical_flypy
    - easy_en
    - japanese
    - tiger_codes
    - tiger_oni
    - tiger_phrases
  description: |
    赫兹虎单整句·并击·手机勿用
  name: "🐯句·单·并击"
  schema_id: tiger_phrase_chord
  version: "2024-12-22"

__patch:
  - tiger_phrase_chord.custom:/patch?
  - engine/processors/@before 2: chord_composer
  - engine/processors/@before 5: lua_processor@*hertz.jane_processor
  #- engine/processors/@before 4: lua_processor@*hertz.chord_composer_processor
  - engine/filters/@next: simplifier@chinese_english
  - engine/filters/@next: lua_filter@*hertz.tiger_spelling*filter

__include: tiger:/switches_engine_script       # Rime模块
__include: tiger:/fast_symbol_translator       # 快符
__include: tiger:/easy_en_translator           # 英文
__include: tiger:/japanese_translator          # 日文
__include: tiger:/radical_flypy_translator     # 部件拆字
__include: tiger:/tiger_codes_translator       # 官方虎词
__include: tiger:/tiger_oni_translator         # 九重鬼虎
__include: tiger:/tiger_phrase_translator      # 赫兹虎单整句
__include: tiger:/tiger_phrases_translator     # 官方虎词整句
__include: tiger:/reverse_lookup_translator_xh # 小鹤反查
__include: tiger:/s2t_filter                   # 简繁滤镜
__include: tiger:/history_filter               # z 键历史
__include: tiger:/emoji_filter                 # Emoji 滤镜
__include: tiger:/cn_en_filter                 # 中英滤镜
__include: tiger:/mars_filter                  # 火星文滤镜
__include: tiger:/embeded_cands_filter         # 候选嵌入
__include: tiger:/hertz                        # Hertz定制

speller:
  alphabet: QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm;':"<>?,./~!@#$%^&*()_+-=[]\{}|1234567890
  delimiter: "_`"
  algebra:
    __patch:
      - tiger:/algebra/core        # 核心拼算
      #- tiger:/algebra/phrase      # 整句拼算
      - tiger:/algebra/erase       # 擦除编码

translator:
  dictionary: tiger_phrase_chord
  enable_user_dict: false
  enable_charset_filter: false
  enable_encoder: false
  enable_sentence: false
  encode_commit_history: false
  enable_completion: false
  #preedit_format:
  #  # 手动分词标记
  #  - xform/([a-z]{4})[']/$1⁴/
  #  - xform/([a-z]{3})[']/$1³/
  #  - xform/([a-z]{2})[']/$1²/
  #  - xform/([a-z]{1})[']/$1¹/
  #  # 自动分词标记
  #  - xform/([a-z]{1,4})[_]/$1␣/
  #  # 其余处理
  #  #- xform/([A-Z])/\L$1/
  #  - xform/([A-Z])/$1°/  # 并击提示符，可选 ° ∞ ᵆ ʬ ˜ 
  #  - xform/([¹²³⁴][a-z]+)[_']/$1/
  #  - xform/([¹²³⁴])_/$1/
  #  - xform/_/␣/
  #  #- xlit/ABCDEFGHIJKLMNOPQRSTUVWXYZ/ạḅċḍẹḟġḥịĵḳḷṃṇọṗꝗṛṣṭụṿẉẋỵẓ/
  #  #- xlit/ABCDEFGHIJKLMNOPQRSTUVWXYZ/ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩ/

key_binder:
  import_preset: default
  custom_bindings:
    __append:
      # 在這裏添加只在本方案中生效的按鍵綁定
  bindings:
    __patch:
      - :/key_binder/custom_bindings?
      - tiger:/keys/emacs_mode
      - tiger:/keys/tab
      - tiger:/keys/page_up_down
      #- tiger:/keys/selector
      - tiger:/keys/options_toggle

#__include: tiger:/rec
recognizer:
  import_preset: default
  patterns:
    punct: '^/([0-9]0?|[A-Za-z]+)$'
    #radical_flypy: "^R[a-z]*`?$"
    reverse_lookup: "^`[a-z]*'?$"
    expression: '^=.*$'

punctuator:
  #import_preset:
  __include: tiger:/punctuator

tiger_spelling:
  lua:
    switch_key: "Control+c"
    cycle_key: "Shift+Control+C"
schema_name:
  spelling: tiger_spelling_pseudo
  code: tiger_phrase_chord

menu:
  page_size: 1

chord_composer:
  #use_ctrl: false
  #use_alt: false
  #use_shift: false
  #use_super: false
  #use_caps: false
  #finish_trigger_release_num: 999
  #finish_chord_on_first_key_release: true
  #alphabet: qazwsxedcrfvtgbyhnujmikolp `
  alphabet: qazwsxedcrfvtgbyhnujmik,ol.p;/ `

  algebra:  # 来自猫师自然码并击指法
    - xlit|;,./|ACXZ|  # 符号映射为大写字母，分离其转义干扰
    - xlit| |一|  # 主空格
    - xform/^([qwertasdfgzxcvb]+)([一]*)$/$1_$2/  # 处理左手击的表示
    - xform/^([yuiophjklAnmCXZ]+)([一]*)$/_$1$2/  # 处理右手击的表示
    - xform/^([qwertasdfgzxcvb]+)([yuiophjklAnmCXZ]+)([一]*)$/$1$2$3/  # 合并单手击的表示

    - xform/([qwertasdfgzxcvb]+)/<$1>/  # 左手编码包装
    - xform/([yuiophjklAnmCXZ]+)/<$1>/  # 右手编码包装
    - xform/([一]+)/<$1>/  # 空格区编码包装
    
    # 一简字
    - xform=(<zv><一>|<mZ><一>)=Q_=
    - xform=(<wv><一>|<no><一>)=W_=
    - xform=(<ev><一>|<ni><一>)=E_=
    - xform=(<et><一>|<ni><一>)=R_=
    - xform=(<qt><一>|<yp><一>)=T_=
    - xform=(<wt><一>|<yo><一>)=Y_=
    - xform=(<af><一>|<jA><一>)=U_=
    - xform=(<xv><一>|<mX><一>)=I_=
    - xform=(<aw><一>|<oA><一>)=O_=
    - xform=(<qf><一>|<jp><一>)=P_=
    - xform=(<av><一>|<nA><一>)=A_=
    - xform=(<sv><一>|<nl><一>)=S_=
    - xform=(<dv><一>|<nk><一>)=D_=
    - xform=(<sg><一>|<hl><一>)=F_=
    - xform=(<dg><一>|<hk><一>)=G_=
    - xform=(<ar><一>|<uA><一>)=H_=
    - xform=(<xf><一>|<jX><一>)=J_=
    - xform=(<xc><一>|<CX><一>)=K_=
    - xform=(<sr><一>|<ul><一>)=L_=
    - xform=(<zf><一>|<jZ><一>)=Z_=
    - xform=(<xd><一>|<kX><一>)=X_=
    - xform=(<xb><一>|<nX><一>)=C_=
    - xform=(<zs><一>|<lZ><一>)=V_=
    - xform=(<qw><一>|<op><一>)=B_=
    - xform=(<se><一>|<il><一>)=N_=
    - xform=(<wd><一>|<ko><一>)=M_=

    # 彩蛋
    - xform=<z><Z><一>=VhuZhhYjvJuLfWbeOFJgBdMUDVwYjvJuXtWnjLfWbe,WvIgdJdkRZhhMnUGgAbhImiMnXSwSyEloFlpgUciEid,ITyMhUoJlhHnXuc\\OdoK\\LlUslKUYjvJuJefNj=

    # 字母
    - xform=(<zv>|<mZ>)=Q=
    - xform=(<wv>|<no>)=W=
    - xform=(<ev>|<ni>)=E=
    - xform=(<et>|<yi>)=R=
    - xform=(<qt>|<yp>)=T=
    - xform=(<wt>|<yo>)=Y=
    - xform=(<af>|<jA>)=U=
    - xform=(<xv>|<mX>)=I=
    - xform=(<aw>|<oA>)=O=
    - xform=(<qf>|<jp>)=P=
    - xform=(<wer>|<uio>)=/=
    - xform=(<qwe>|<iop>)=\=
    - xform=(<rt>|<yu>)=[=
    - xform=(<ert>|<yui>)=]=

    - xform=(<av>|<nA>)=A=
    - xform=(<sv>|<nl>)=S=
    - xform=(<dv>|<nk>)=D=
    - xform=(<sg>|<hl>)=F=
    - xform=(<dg>|<hk>)=G=
    - xform=(<ar>|<uA>)=H=
    - xform=(<xf>|<jX>)=J=
    - xform=(<xc>|<CX>)=K=
    - xform=(<sr>|<ul>)=L=
    - xform=(<dc>|<mk>)=~=
    - xform=(<fv>|<nj>)=|=
    - xform=(<fg>|<hj>)=(=
    - xform=(<dfg>|<hjk>)=)=

    - xform=(<zf>|<jZ>)=Z=
    - xform=(<xd>|<kX>)=X=
    - xform=(<xb>|<nX>)=C=
    - xform=(<zs>|<lZ>)=V=
    - xform=(<qw>|<op>)=B=
    - xform=(<se>|<il>)=N=
    - xform=(<wd>|<ko>)=M=
    - xform=(<at>|<yA>)=<=
    - xform=(<ag>|<hA>)=>=
    - xform=(<zx>|<XZ>)=@=
    - xform=(<vb>|<nm>)=$=

    - xform=(<q>|<p>)=q=
    - xform=(<w>|<o>)=w=
    - xform=(<e>|<i>)=e=
    - xform=(<r>|<u>)=r=
    - xform=(<t>|<y>)=t=
    - xform=(<ef>|<ji>)=y=
    - xform=(<er>|<ui>)=u=
    - xform=(<we>|<io>)=i=
    - xform=(<wr>|<uo>)=o=
    - xform=(<qr>|<up>)=p=
    - xform=(<qe>|<ip>)=%=
    - xform=(<wg>|<ho>)=-=
    - xform/(<qg>|<hp>)/=/

    - xform=(<a>|<A>)=a=
    - xform=(<s>|<l>)=s=
    - xform=(<d>|<k>)=d=
    - xform=(<f>|<j>)=f=
    - xform=(<g>|<h>)=g=
    - xform=(<wf>|<jo>)=h=
    - xform=(<df>|<jk>)=j=
    - xform=(<sd>|<kl>)=k=
    - xform=(<sf>|<jl>)=l=
    - xform=(<as>|<lA>)=:=
    - xform=(<ad>|<kA>)=;=
    - xform=(<asd>|<klA>)='=
    - xform=(<adf>|<jkA>)="=
    - xform=(<rf>|<uj>)=_=
    - xform=(<rg>|<hu>)={=
    - xform=(<eg>|<hi>)=}=

    - xform=(<z>|<Z>)=z=
    - xform=(<x>|<X>)=x=
    - xform=(<c>|<C>)=c=
    - xform=(<v>|<m>)=v=
    - xform=(<b>|<n>)=b=
    - xform=(<sc>|<Cl>)=n=
    - xform=(<cv>|<mC>)=m=
    - xform=(<sdf>|<jkl>)=,=
    - xform=(<wef>|<jio>)=.=
    - xform=(<sef>|<jil>)=!=
    - xform=(<zb>|<nZ>)=?=
    - xform=(<zc>|<CZ>)=#=
    - xform=(<zxc>|<CXZ>)=*=
    - xform=(<xcv>|<mCX>)=&=
    - xform=(<cvb>|<nmC>)=+=

    - xform|(.)_<一>|<"1>$1_|
    - xform|_(.)<一>|<"1>_$1|
    - xform|(..)<一>|<"1>$1|
    - xform|^<一>|<1>|

    - xform/<1>/ /
    - xform/<"1>/"/

    - xform/^.*<.+>.*$//

    - xform=，="""",=
    - xform=。="""".=
    - xform=！=""""!=
    - xform=？=""""?=

  prompt_format:
    # 码元显示效果修正
    - xform/"""",$/，/
    - xform/""""\.$/。/
    - xform/""""!$/！/
    - xform/""""\?$/？/

